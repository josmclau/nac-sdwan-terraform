---
image: caf-sac/aac:1.0.2
stages:
  - validate
  - plan
  - deploy
  - test

variables:
  GIT_SSL_NO_VERIFY: "true"
  SDWAN_USERNAME:
    description: "Cisco SDWAN Username"
  SDWAN_PASSWORD:
    description: "Cisco SDWAN Password"
  SDWAN_URL:
    description: "Cisco SDWAN URL"
  TF_HTTP_USERNAME:
    description: "GitLab Username"
  TF_HTTP_PASSWORD:
    description: "GitLab Access Token"
  GITLAB_API_URL:
    description: "GitLab API v4 root URL"
    value: "${CI_API_V4_URL}"
  TF_HTTP_ADDRESS:
    description: "GitLab HTTP Address to store the TF state file"
    value: "${GITLAB_API_URL}/projects/${CI_PROJECT_ID}/terraform/state/tfstate"
  TF_HTTP_LOCK_ADDRESS:
    description: "GitLab HTTP Address to lock the TF state file"
    value: ${TF_HTTP_ADDRESS}/lock
  TF_HTTP_LOCK_METHOD:
    description: "Method to lock TF state file"
    value: POST
  TF_HTTP_UNLOCK_ADDRESS:
    description: "GitLab HTTP Address to unlock the TF state file"
    value: ${TF_HTTP_ADDRESS}/lock
  TF_HTTP_UNLOCK_METHOD:
    description: "Method to unlock TF state file"
    value: DELETE


cache:
  key: terraform_modules_and_lock
  paths:
    - .terraform
    - .terraform.lock.hcl

validate:
  stage: validate
  script:
    - set -o pipefail && terraform fmt |& tee fmt_output.txt
    - set -o pipefail && iac-validate ./data/ |& tee validate_output.txt
  artifacts:
    when: always
    paths:
      - fmt_output.txt
      - validate_output.txt
  cache: []
  rules:
    - if: $CI_COMMIT_TAG == null

plan:
  stage: plan
  script:
    - terraform init -input=false
    - terraform plan -out=plan.tfplan -input=false
    - terraform show -no-color plan.tfplan > plan.txt
  artifacts:
    when: always
    paths:
      - plan.txt
      - plan.tfplan
    reports:
      terraform: plan_gitlab.json
  dependencies: []
  needs:
    - validate
  only:
    - merge_requests
    - main

deploy:
  stage: deploy
  script:
    - terraform init -input=false
    - terraform apply -input=false -auto-approve plan.tfplan
  dependencies:
    - plan
  needs:
    - plan
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual

test-integration:
  stage: test
  script:
    - echo "This is a placeholder for test integration using iac-test. Will be added in Step X"
    #- set -o pipefail && iac-test -d ./data -t ./tests/templates -o ./tests/results/sdwan |& tee test_output.txt
  artifacts:
    when: always
    paths:
      - tests/results/sdwan/*.html
      - tests/results/sdwan/xunit.xml
      - test_output.txt
  dependencies:
    - deploy
  needs:
    - deploy
  only:
    - main

test-idempotency:
  stage: test
  script:
    - terraform init -input=false
    - terraform plan -input=false -detailed-exitcode
  dependencies:
    - deploy
  needs:
    - deploy
  only:
    - main